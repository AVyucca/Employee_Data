{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar _a;\n\nimport { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { DataEntryService } from '../services/data-entry.service'; // Adjust path if needed\n\nlet DataEntryComponent = class DataEntryComponent {\n  constructor(fb, dataEntryService) {\n    this.fb = fb;\n    this.dataEntryService = dataEntryService;\n  }\n\n  ngOnInit() {\n    this.entryForm = this.fb.group({\n      name: ['', Validators.required],\n      dob: ['', Validators.required],\n      mobile: ['', [Validators.required, Validators.pattern('^[0-9]{10}$')]],\n      joiningDate: ['', Validators.required],\n      pan: ['', Validators.required],\n      aadhaar: ['', [Validators.required, Validators.pattern('^[0-9]{12}$')]],\n      bankAccount: ['', Validators.required],\n      department: ['', Validators.required],\n      role: ['', Validators.required],\n      salary: ['', [Validators.required, Validators.min(0)]]\n    });\n  }\n\n  onSubmit() {\n    if (this.entryForm.valid) {\n      this.dataEntryService.submitEntry(this.entryForm.value).subscribe({\n        next: res => {\n          alert('Record saved successfully!');\n          this.entryForm.reset();\n        },\n        error: err => {\n          console.error('Error saving record:', err);\n          alert('Failed to save record. Please try again.');\n        }\n      });\n    } else {\n      alert('Please fill all required fields correctly.');\n    }\n  }\n\n  onCancel() {\n    if (confirm('Are you sure you want to cancel? All data will be cleared.')) {\n      this.entryForm.reset();\n    }\n  }\n\n};\nDataEntryComponent = __decorate([Component({\n  selector: 'app-data-entry',\n  templateUrl: './data-entry.component.html',\n  styleUrls: ['./data-entry.component.css']\n}), __metadata(\"design:paramtypes\", [FormBuilder, typeof (_a = typeof DataEntryService !== \"undefined\" && DataEntryService) === \"function\" ? _a : Object])], DataEntryComponent);\nexport { DataEntryComponent };","map":null,"metadata":{},"sourceType":"module"}