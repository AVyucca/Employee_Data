{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nvar _a;\n\nimport { Component } from '@angular/core';\nimport { EmployeeService } from '../employee.service';\nlet EmployeeComponent = class EmployeeComponent {\n  constructor(employeeService) {\n    this.employeeService = employeeService;\n    this.employees = [];\n    this.isLoading = true;\n    this.errorMessage = '';\n  }\n\n  ngOnInit() {\n    this.loadEmployees();\n  }\n\n  loadEmployees() {\n    this.employeeService.getEmployees().subscribe({\n      next: data => {\n        this.employees = data;\n        this.isLoading = false;\n      },\n      error: error => {\n        this.errorMessage = 'Failed to load employee data.';\n        console.error(error);\n        this.isLoading = false;\n      }\n    });\n  }\n\n};\nEmployeeComponent = __decorate([Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n}), __metadata(\"design:paramtypes\", [typeof (_a = typeof EmployeeService !== \"undefined\" && EmployeeService) === \"function\" ? _a : Object])], EmployeeComponent);\nexport { EmployeeComponent };","map":null,"metadata":{},"sourceType":"module"}